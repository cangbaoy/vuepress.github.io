(window.webpackJsonp=window.webpackJsonp||[]).push([[275],{549:function(t,e,i){"use strict";i.r(e);var n=i(12),r=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"spring-框架中用到了哪些设计模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-框架中用到了哪些设计模式"}},[t._v("#")]),t._v(" Spring 框架中用到了哪些设计模式")]),t._v(" "),e("ul",[e("li",[t._v("代理模式：在 AOP 和 Remoting 中被用的比较多。")]),t._v(" "),e("li",[t._v("单例模式：在 Spring 配置文件中定义的 Bean 默认为单例模式。")]),t._v(" "),e("li",[t._v("模板方法：用来解决代码重复的问题。比如. RestTemplate, JmsTemplate, JpaTemplate。")]),t._v(" "),e("li",[t._v("前端控制器：Spring 提供了 DispatcherServlet 来对请求进行分发。")]),t._v(" "),e("li",[t._v("视图帮助(View Helper )：Spring 提供了一系列的 JSP 标签，高效宏来辅助将分散的代码整合在视图里。")]),t._v(" "),e("li",[t._v("依赖注入：贯穿于 BeanFactory / ApplicationContext 接口的核心理念。")]),t._v(" "),e("li",[t._v("工厂模式：BeanFactory 用来创建对象的实例。")])])])}),[],!1,null,null,null);e.default=r.exports}}]);