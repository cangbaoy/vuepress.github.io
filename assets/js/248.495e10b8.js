(window.webpackJsonp=window.webpackJsonp||[]).push([[248],{524:function(t,s,a){"use strict";a.r(s);var e=a(12),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"redis-集群方案与实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-集群方案与实现"}},[t._v("#")]),t._v(" Redis 集群方案与实现")]),t._v(" "),s("ul",[s("li",[t._v("客户端分片")]),t._v(" "),s("li",[t._v("基于代理的分片")]),t._v(" "),s("li",[t._v("路由查询")]),t._v(" "),s("li",[t._v("客户端分片")]),t._v(" "),s("li",[t._v("由客户端决定 key 写入或者读取的节点")]),t._v(" "),s("li",[t._v("包括 Jedis 在内的一些客户端，实现了客户端分片机制")])]),t._v(" "),s("h2",{attrs:{id:"路由查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由查询"}},[t._v("#")]),t._v(" 路由查询")]),t._v(" "),s("p",[t._v("将请求发送到任意节点，接收到请求的节点会将查询请求发送到正确的节点上执行。")]),t._v(" "),s("h2",{attrs:{id:"开源方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开源方案"}},[t._v("#")]),t._v(" 开源方案")]),t._v(" "),s("p",[t._v("Sentinel")])])}),[],!1,null,null,null);s.default=r.exports}}]);