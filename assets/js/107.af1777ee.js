(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{384:function(t,a,e){"use strict";e.r(a);var v=e(12),s=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"junit-断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#junit-断言"}},[t._v("#")]),t._v(" JUnit 断言")]),t._v(" "),a("h2",{attrs:{id:"什么是断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是断言"}},[t._v("#")]),t._v(" 什么是断言")]),t._v(" "),a("blockquote",[a("p",[t._v("断言是编程术语，表示为一些布尔表达式，程序员相信在程序中的某个特定点该表达式值为真，可以在任何时候启用和禁用断言验证，因此可以在测试时启用断言而在部署时禁用断言。同样，程序投入运行后，最终用户在遇到问题时可以重新启用断言。")])]),t._v(" "),a("p",[t._v("使用断言可以创建更稳定、品质更好且 不易于出错的代码。当需要在一个值为 false 时中断当前操作的话，可以使用断言。单元测试必须使用断言（Junit/JunitX）。")]),t._v(" "),a("h2",{attrs:{id:"常用断言方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用断言方法"}},[t._v("#")]),t._v(" 常用断言方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("断言")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("void assertEquals([String message], expected value, actual value)")]),t._v(" "),a("td",[t._v("断言两个值相等。值可能是类型有 int, short, long, byte, char or java.lang.Object. 第一个参数是一个可选的字符串消息")])]),t._v(" "),a("tr",[a("td",[t._v("void assertTrue([String message], boolean condition)")]),t._v(" "),a("td",[t._v("断言一个条件为真")])]),t._v(" "),a("tr",[a("td",[t._v("void assertFalse([String message],boolean condition)")]),t._v(" "),a("td",[t._v("断言一个条件为假")])]),t._v(" "),a("tr",[a("td",[t._v("void assertNotNull([String message], java.lang.Object object)")]),t._v(" "),a("td",[t._v("断言一个对象不为空(null)")])]),t._v(" "),a("tr",[a("td",[t._v("void assertNull([String message], java.lang.Object object)")]),t._v(" "),a("td",[t._v("断言一个对象为空(null)")])]),t._v(" "),a("tr",[a("td",[t._v("void assertSame([String message], java.lang.Object expected, java.lang.Object actual)")]),t._v(" "),a("td",[t._v("断言，两个对象引用相同的对象")])]),t._v(" "),a("tr",[a("td",[t._v("void assertNotSame([String message], java.lang.Object unexpected, java.lang.Object actual)")]),t._v(" "),a("td",[t._v("断言，两个对象不是引用同一个对象")])]),t._v(" "),a("tr",[a("td",[t._v("void assertArrayEquals([String message], expectedArray, resultArray)")]),t._v(" "),a("td",[t._v("断言预期数组和结果数组相等。数组的类型可能是 int, long, short, char, byte or java.lang.Object.")])])])])])}),[],!1,null,null,null);a.default=s.exports}}]);