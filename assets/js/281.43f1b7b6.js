(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{557:function(t,v,_){"use strict";_.r(v);var e=_(12),n=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"如何自定义注解实现功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何自定义注解实现功能"}},[t._v("#")]),t._v(" 如何自定义注解实现功能")]),t._v(" "),v("ol",[v("li",[t._v("创建自定义注解和创建一个接口相似，但是注解的 "),v("code",[t._v("interface")]),t._v(" 关键字需要以 "),v("code",[t._v("@")]),t._v(" 符号开头。")]),t._v(" "),v("li",[t._v("注解方法不能带有参数；")]),t._v(" "),v("li",[t._v("注解方法返回值类型限定为："),v("code",[t._v("基本类型")]),t._v("、"),v("code",[t._v("String")]),t._v("、"),v("code",[t._v("Enums")]),t._v("、"),v("code",[t._v("Annotation")]),t._v(" 或者是这些类型的"),v("strong",[t._v("数组")]),t._v("；")]),t._v(" "),v("li",[t._v("注解方法可以有默认值；")]),t._v(" "),v("li",[t._v("注解本身能够包含元注解，元注解被用来注解其它注解。")])])])}),[],!1,null,null,null);v.default=n.exports}}]);