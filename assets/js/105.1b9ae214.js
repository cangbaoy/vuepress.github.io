(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{382:function(v,t,_){"use strict";_.r(t);var a=_(12),s=Object(a.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"测试小知识点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试小知识点"}},[v._v("#")]),v._v(" 测试小知识点")]),v._v(" "),t("h2",{attrs:{id:"什么是-tdd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-tdd"}},[v._v("#")]),v._v(" 什么是 TDD")]),v._v(" "),t("h3",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[v._v("#")]),v._v(" 概念")]),v._v(" "),t("p",[t("strong",[v._v("测试驱动开发")]),v._v("（Test-Driven Development，TDD）是通过测试定义所要开发的功能的接口，然后实现功能的开发过程，是"),t("code",[v._v("敏捷开发")]),v._v("中的一项核心实践和技术。")]),v._v(" "),t("h3",{attrs:{id:"测试驱动开发的基本过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试驱动开发的基本过程"}},[v._v("#")]),v._v(" 测试驱动开发的基本过程")]),v._v(" "),t("ul",[t("li",[v._v("明确当前要完成的功能。可以记录成一个 "),t("code",[v._v("TODO")]),v._v(" 列表。")]),v._v(" "),t("li",[v._v("快速完成针对此功能的测试用例编写。")]),v._v(" "),t("li",[v._v("测试代码编译不通过。")]),v._v(" "),t("li",[v._v("编写对应的功能代码。")]),v._v(" "),t("li",[v._v("测试通过。")]),v._v(" "),t("li",[v._v("对代码进行重构，并保证测试通过。")]),v._v(" "),t("li",[v._v("循环完成所有功能的开发。")])]),v._v(" "),t("h3",{attrs:{id:"优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[v._v("#")]),v._v(" 优缺点")]),v._v(" "),t("ul",[t("li",[v._v("优点：保证代码质量，测试的覆盖率高")]),v._v(" "),t("li",[v._v("缺点：开发效率低（基于国内行情：先上线）")])]),v._v(" "),t("h2",{attrs:{id:"什么是-ddd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-ddd"}},[v._v("#")]),v._v(" 什么是 DDD")]),v._v(" "),t("h3",{attrs:{id:"概念-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[v._v("#")]),v._v(" 概念")]),v._v(" "),t("p",[t("strong",[v._v("领域驱动设计")]),v._v("(Domain-Driven Design，DDD)")]),v._v(" "),t("h2",{attrs:{id:"常见的测试方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的测试方式"}},[v._v("#")]),v._v(" 常见的测试方式")]),v._v(" "),t("ul",[t("li",[v._v("单元测试：\n"),t("ul",[t("li",[v._v("白盒测试：又称结构测试、透明盒测试、逻辑驱动测试或基于代码的测试，简单来说是可以看到源码的，")]),v._v(" "),t("li",[v._v("黑盒测试：黑盒测试也称功能测试，它是通过测试来检测每个功能是否都能正常使用，简单来说看不到源码，功能测试")]),v._v(" "),t("li",[v._v("灰盒测试：介于白盒测试与黑盒测试之间的，灰盒测试关注输出对于输入的正确性，同时也关注内部表现，但这种关注不象白盒那样详细、完整，只是通过一些表征性的现象、事件、标志来判断内部的运行状态，有时候输出是正确的，但内部其实已经错误了，这种情况非常多，如果每次都通过白盒测试来操作，效率会很低，因此需要采取这样的一种灰盒的方法。")])])]),v._v(" "),t("li",[v._v("压力测试：并发数的问题，能承载多少并发")]),v._v(" "),t("li",[v._v("疲劳强度测试：长期稳定运行，72小时， 7天")]),v._v(" "),t("li",[v._v("冒烟测试：对主要流程测试，比如支付环节")]),v._v(" "),t("li",[v._v("集成测试：完整功能的测试，最终要的是测试 整体业务流程")]),v._v(" "),t("li",[v._v("回归测试：增加一个功能")]),v._v(" "),t("li",[v._v("自动化测试：编码，场景设计")])])])}),[],!1,null,null,null);t.default=s.exports}}]);